import pandas as pd

def load_penguins():
    file_path = "penguins.csv"
    df = pd.read_csv(file_path)
    return df
penguins = load_penguins()
#print(penguins.head())

def create_mass_list(island, sex, body_mass_g): # creates list containing each mass result and what gender & island it belongs to for island_mass
    result = []
    for i in range(len(island)):
        result.append((island[i], sex[i], float(body_mass_g[i])))
    return result

mass_list = create_mass_list(penguins["island"], penguins["sex"], penguins["body_mass_g"])
#print(mass_list)


def island_mass(mass_list):
    sums_sex, counts_sex = {}, {} # dict for sum of each island + amount of penguins per island incl. sex
    sums_island, counts_island = {}, {} # dict for sum of each island + amount of penguins per island
    for island, sex, mass in mass_list:
        if not isinstance(mass, (int, float)) or mass != mass:
            continue
        if not isinstance(sex, str) or sex != sex:
            continue

        # per island and sex
        key_sex = (island, sex)
        sums_sex[key_sex] = sums_sex.get(key_sex, 0) + mass  # running sum of each island + sex, if island doesn't exist yet returns 0
        counts_sex[key_sex] = counts_sex.get(key_sex, 0) + 1 # counts how many penguins + sex per island starting at 0

        # overall avg
        sums_island[island] = sums_island.get(island, 0) + mass
        counts_island[island] = counts_island.get(island, 0) + 1

    avg_per_sex = {key: sums_sex[key]/counts_sex[key] for key in sums_sex}
    avg_per_island = {key: sums_island[island]/counts_island[island] for key in sums_island}
    for (island, sex), avg in avg_per_sex.items():
        print(f"The average body mass of {sex} penguins on {island} is {avg:.2f} g")


    print("\nThe average body mass per island is:")
    for island, avg in avg_per_island.items():
        print(f"{island}: {avg:.2f} g")
    return avg_per_sex, avg_per_island
avg_mass = island_mass(mass_list)

def create_length_list(species, bill_length_mm, bill_depth_mm, flipper_length_mm):
    result = []
    for i in range(len(species)):
        if (bill_depth_mm[i] != bill_depth_mm[i] or bill_depth_mm[i] != bill_depth_mm[i] or flipper_length_mm[i] != flipper_length_mm[i]):
            continue
        result.append((species[i], float(bill_length_mm[i]), float(bill_depth_mm[i]), int(flipper_length_mm[i])))
    return result

length_list = create_length_list(
    penguins["species"],
    penguins["bill_length_mm"],
    penguins["bill_depth_mm"],
    penguins["flipper_length_mm"]
)

# Print the list
print(length_list[:10])






